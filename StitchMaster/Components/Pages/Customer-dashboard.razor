@using  StitchMaster;
@using StitchMaster.Components.RazorComponents
@using StitchMaster.BusinessLogic
@using StitchMaster.DataLayer
@inject UserStateService UserState


@page "/customer-dashboard"
<div class="container-fluid py-4">
    <h3 class="mb-4">Welcome
        @if(UserState.Email != null)
        {
            @UserData.Instance.GetUserByEmail(UserState.Email).FullName
        }
    </h3>

    <section class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="mb-0">Our Famous Tailors</h5>
            <a href="tailors" class="text-decoration-none text-secondary fw-semibold">See More</a>
        </div>

        <div class="d-flex flex-wrap gap-5">
            @foreach(TailorGig gig in gigs.Take(3))
            {
                <GigCard
                Name=@gig.GigTitle
                GigId=@gig.GigID
                Description=@gig.GigDescription
                Rating="4.8"
                GigImageUrl=@gig.ImageURL
                Icon="bi bi-scissors"
                AvatarUrl ="/Avatar.svg"
                />
            }

        </div>
    </section>

    <section class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="mb-0">Featured Products</h5>
            <a href="fabrics" class="text-decoration-none text-secondary fw-semibold">See More</a>
        </div>

        <div class="d-flex flex-wrap gap-4">
            @foreach(FabricProduct product in products.Take(3))
            {
                <ProductCard
                ProductImageUrl=@product.ImageURl
                ProductId=@product.FabricProductID
                ProductName=@product.FabricProductTitle
                Price=@product.PricePerMeter
                Description=@product.FabricProductDescription
                SellerAvatarUrl="/Avatar.svg"
                material=@product.FabricMaterial
                SellerName="Admin"
                />
            }

        </div>

    </section>

</div>

@code {
    // You can add any additional logic or properties here if needed
    List<TailorGig> gigs;
    List<FabricProduct> products;
    protected override void OnInitialized()
    {
        // Simulate loading the gigs from DB or service
        gigs = LoadGigs();
        products = LoadProducts();
    }
    private List<TailorGig> LoadGigs()
    {
        // You will fetch from DB/service — this is just demo data
        return TailorGigData.Instance.GetAllObjects();
    }
    private List<FabricProduct> LoadProducts()
    {
        // You will fetch from DB/service — this is just demo data
        return FabricProductData.Instance.GetAllObjects();
    }
}